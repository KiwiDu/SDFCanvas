{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./ts/scimath/matrix.ts","webpack:///./ts/geo/aabb.ts","webpack:///./ts/geo/geomath.ts","webpack:///./ts/geo/shapes.ts","webpack:///./ts/geo/pack.ts","webpack:///./ts/scimath/utils.ts","webpack:///./ts/canvas/color.ts","webpack:///./ts/canvas/painter.ts","webpack:///./ts/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Matrix","[object Object]","a1","a2","a3","b1","b2","b3","c1","c2","n3","this","data","Float64Array","arguments","nums","vals","length","dx","dy","angle","Math","cos","sin","ratio","pos","console","log","det","adjugateMatrix","divideByNumber","result","k","j","toString","sign","minor","cofactor","tgt","dotProduct","row","col","make","num","map","ele","a","b","Unit","AABB","min","max","minx","maxx","miny","maxy","x","y","len","sqrt","dis_sqr","dis","geomath_Shape","id","sdf","geomath_Dot","super","origin","Vector","_b","_e","shapes_Segment","_way","toDot","op","geomath_opr","form","dis1_sqr","dis2_sqr","len_sqr","abs","shapes_Line","_dd","A","B","C","takein","_da","_kb","shapes_Capsule","segment","radius","aabb","expand","helper","center","_","range","btm","top","val","threshold","x1","x2","Color","R","G","BlendMode","blend_pixel","color","alpha","opr","painter_Coordinate","ctx","width","height","w","h","fillStyle","fillRect","floor","weight","step","absXY","absX","absY","toRelX","toRelY","half_w","half_h","relXY","relX","relY","shapes","getImageData","pixels","fill","shape","minX","minY","toAbsXY","maxX","maxY","ceil","random","ret","Multiply","putImageData","init_canvas","cvs","getContext","imageSmoothingEnabled","getCanvas","cvs_id","document","getElementById","canvas","painter","axis","shape_list","push","addEventListener","url","toDataURL","save","renderSDF","axisCkBx","checked","ev","style","display","resCkBx","setAttribute","main"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* Unit test passed on 18/10/05\r\nlet a = Matrix.rotate(1).multiplyMatrix(Matrix.translate(0.2,-0.3))\r\n////a=Matrix.translate(10,-20)\r\nconsole.log('ori:\\n'+a)\r\n////console.log('multi&divide:\\n'+a.multiplyNumber(2)+'\\n\\n'+a.divideByNumber(2))\r\nconsole.log('inverse:\\n'+a.inverseMatrix())\r\nconsole.log('invertwice:\\n'+a.inverseMatrix().inverseMatrix())\r\nconsole.log('product:\\n'+a.multiplyMatrix(a.inverseMatrix()) )\r\n*/\r\nexport class Matrix {\r\n    data: Float64Array\r\n    static Unit: Matrix = new Matrix(\r\n        1, 0, 0,\r\n        0, 1, 0,\r\n        0, 0, 1)\r\n    constructor(a1: number, a2: number, a3: number, b1: number, b2: number, b3: number, c1: number, c2: number, n3: number) {\r\n        this.data = new Float64Array(9)\r\n        for (let i = 0; i < 9; i++) {\r\n            this.data[i] = arguments[i]\r\n        }\r\n    }\r\n\r\n    static make(nums: Float64Array) {\r\n        const vals = new Float64Array(9)\r\n        for (let i = 0; i < 9; i++) {\r\n            vals[i] = i < nums.length ? nums[i] : 0;\r\n        }\r\n        return new Matrix(vals[0], vals[1], vals[2], vals[3], vals[4], vals[5], vals[6], vals[7], vals[8])\r\n    }\r\n\r\n    static translate(dx: number, dy: number): Matrix {\r\n        return new Matrix(1, 0, 0,\r\n            0, 1, 0,\r\n            dx, dy, 1);\r\n    }\r\n\r\n    static rotate(angle: number): Matrix {\r\n        return new Matrix(Math.cos(angle), -Math.sin(angle), 0,\r\n            Math.sin(angle), Math.cos(angle), 0,\r\n            0, 0, 1);\r\n    }\r\n\r\n    static zoom(ratio: number): Matrix {\r\n        return new Matrix(ratio, 0, 0,\r\n            0, ratio, 0,\r\n            0, 0, 1);\r\n    }\r\n\r\n    det/* erminant */(): number {\r\n        //11*22*33 + 12*23*31 + 13*21*32  -  13*22*31 - 11*23*32 - 12*21*33\r\n        return this.pos(0, 0) * this.pos(1, 1) * this.pos(2, 2)\r\n            + this.pos(0, 1) * this.pos(1, 2) * this.pos(2, 0)\r\n            + this.pos(0, 2) * this.pos(1, 0) * this.pos(2, 1)\r\n            - this.pos(0, 2) * this.pos(1, 1) * this.pos(2, 0)\r\n            - this.pos(0, 0) * this.pos(1, 2) * this.pos(2, 1)\r\n            - this.pos(0, 1) * this.pos(1, 0) * this.pos(2, 2)\r\n    }\r\n\r\n    inverseMatrix(): Matrix {\r\n        console.log('det : ' + this.det())\r\n        return this.adjugateMatrix().divideByNumber(this.det())\r\n    }\r\n\r\n    transposeMatrix(): Matrix {\r\n        return new Matrix(this.pos(0, 0), this.pos(1, 0), this.pos(2, 0),\r\n            this.pos(0, 1), this.pos(1, 1), this.pos(2, 1),\r\n            this.pos(0, 2), this.pos(1, 2), this.pos(2, 2))\r\n    }\r\n\r\n    minor(r: number, c: number): number {\r\n        let result = new Float64Array(4)\r\n        let k = 0\r\n        for (let i = 0; i < 3; i++) {\r\n            if (i == r) { continue }\r\n\r\n            for (let j = 0; j < 3; j++) {\r\n                if (j == c) { continue }\r\n\r\n                result[k] = this.pos(i, j)\r\n                k++\r\n            }\r\n        }\r\n        console.log('minor :  [ ' + result.toString() + ' ] ')\r\n        //11*22 - 12*21\r\n        //[0,1\r\n        // 2,3]\r\n        return result[0] * result[3] - result[1] * result[2]\r\n    }\r\n\r\n    cofactor(r: number, c: number) {\r\n        let sign = r + c\r\n        return this.minor(r, c) * (sign % 2 == 1 ? -1 : 1)\r\n    }\r\n\r\n\r\n    adjugateMatrix(): Matrix {\r\n        return new Matrix(this.cofactor(0, 0), this.cofactor(1, 0), this.cofactor(2, 0),\r\n            this.cofactor(0, 1), this.cofactor(1, 1), this.cofactor(2, 1),\r\n            this.cofactor(0, 2), this.cofactor(1, 2), this.cofactor(2, 2))\r\n    }\r\n\r\n    add(tgt: Matrix) {\r\n        let result = new Float64Array(9)\r\n        for (let i = 0; i < 9; i++) {\r\n            result[i] = this.data[i] + tgt.data[i]\r\n        }\r\n    }\r\n\r\n    multiplyMatrix(tgt: Matrix): Matrix {\r\n        let result = new Float64Array(9)\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                result[i * 3 + j] = Matrix.dotProduct(this.row(i), tgt.col(j))\r\n            }\r\n        }\r\n        //console.log(result.toString())\r\n        return Matrix.make(result)\r\n    }\r\n\r\n    multiplyNumber(num: number): Matrix {\r\n        return Matrix.make(this.data.map(ele => ele * num))\r\n    }\r\n\r\n    divideByNumber(num: number): Matrix {\r\n        return Matrix.make(this.data.map(ele => ele / num))\r\n    }\r\n\r\n    row(n: number): [number, number, number] {\r\n        return [this.data[3 * n], this.data[3 * n + 1], this.data[3 * n + 2]]\r\n    }\r\n\r\n    col(n: number): [number, number, number] {\r\n        return [this.data[n], this.data[3 + n], this.data[6 + n]]\r\n    }\r\n\r\n    pos(r: number, c: number) {\r\n        return this.data[r * 3 + c];\r\n    }\r\n\r\n    private static dotProduct(a: [number, number, number], b: [number, number, number]): number {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n    }\r\n\r\n    toString(): string {\r\n        return '[' + this.row(0) + '\\n' + this.row(1) + '\\n' + this.row(2) + ']'\r\n    }\r\n}\r\n","import { Dot } from \"./geomath\";\r\n\r\nexport class AABB {\r\n    constructor(public readonly min: [number, number], public readonly max: [number, number]) {\r\n        min[0] = Math.max(min[0], -1)\r\n        min[1] = Math.max(min[1], -1)\r\n        max[0] = Math.min(max[0], 1)\r\n        max[1] = Math.min(max[1], 1)\r\n    }\r\n    expand(d: number) {\r\n        return new AABB(\r\n            [this.min[0] - d, this.min[1] - d], [this.max[0] + d, this.max[1] + d])\r\n    }\r\n\r\n    static form(a: Dot, b: Dot) {\r\n        let [minx, maxx, miny, maxy] = [a.x, b.x, a.y, b.y]\r\n        if (minx > maxx) {\r\n            [minx, maxx] = [maxx, minx]\r\n        }\r\n        if (miny > maxy) {\r\n            [miny, maxy] = [maxy, miny]\r\n        }\r\n        return new AABB([minx - 1, miny - 1], [maxx + 1, maxy + 1])\r\n    }\r\n}","import { Matrix } from '../scimath/matrix'\r\nimport { AABB } from './aabb'\r\nexport { Shape, Pair, Dot, Vector }//Classes\r\nexport { dotProduct, dis, dis_sqr, len, opr }//utils\r\n\r\ninterface Pair {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nfunction toPair(p: [number, number]): Pair {\r\n    return { x: p[0], y: p[1] }\r\n}\r\n\r\ninterface Transformation {\r\n    transformMatrix: Matrix\r\n    transform(m: Matrix)\r\n    pos(): Dot\r\n}\r\n\r\nfunction len(p: Pair) {\r\n    return Math.sqrt(p.x * p.x + p.y * p.y)\r\n}\r\n\r\nfunction dotProduct(a: Pair, b: Pair) {\r\n    return a.x * b.x + a.y * b.y\r\n}\r\n\r\nfunction dis_sqr(a: Pair, b: Pair) {\r\n    let dx = a.x - b.x\r\n    let dy = a.y - b.y\r\n    return (dx * dx + dy * dy)\r\n}\r\n\r\n\r\nfunction dis(a: Pair, b: Pair) {\r\n    return Math.sqrt(dis_sqr(a, b))\r\n}\r\n\r\nfunction opr(a: Pair, b: Pair, op: (a: number, b: number) => number) {\r\n    return { x: op(a.x, b.x), y: op(a.y, b.y) }\r\n}\r\n\r\nfunction transform(m: Matrix) {\r\n    return m.inverseMatrix()\r\n}\r\n\r\nabstract class Shape {\r\n    constructor(public readonly id: string) { }\r\n\r\n    abstract sdf(d: Dot): number\r\n    asdf(d: [number, number]): number {\r\n        return this.sdf(new Dot(d[0], d[1]))\r\n    }\r\n    aabb(): AABB {\r\n        return new AABB([-1, -1], [1, 1])\r\n    }\r\n}\r\n\r\nclass Dot extends Shape {\r\n    static origin: Dot = new Dot(0, 0)\r\n\r\n    constructor(public readonly x: number, public readonly y: number) { super('Dot') }\r\n\r\n    sdf(d: Dot): number {\r\n        return dis(this, d)\r\n    }\r\n\r\n    center(): Dot {\r\n        return this\r\n    }\r\n\r\n    static toDot(p: Pair) {\r\n        return new Dot(p.x, p.y)\r\n    }\r\n\r\n    aabb() {\r\n        return new AABB([this.x - 1, this.y - 1], [this.x + 1, this.y + 1])\r\n    }\r\n}\r\n\r\nclass Vector {\r\n\r\n    constructor(public readonly x: number, public readonly y: number) { }\r\n\r\n    static form(_b: Dot, _e: Dot): Vector {\r\n        let x = _e.x - _b.x\r\n        let y = _e.y - _b.y\r\n        return new Vector(x, y)\r\n    }\r\n\r\n    length(): number {\r\n        return len(this)\r\n    }\r\n\r\n    static toVector(p: Pair): Vector {\r\n        return new Vector(p.x, p.y)\r\n    }\r\n}\r\n","import { Shape, Dot, Vector } from './geomath'\r\nimport { dis, dis_sqr, dotProduct, len, opr } from './geomath'\r\nimport { AABB } from './aabb';\r\nexport { Line, Segment, Capsule, Circle }\r\n\r\n//fundamental\r\nclass Segment extends Shape {\r\n    constructor(public readonly a: Dot, public readonly b: Dot) { super('Segment') }\r\n\r\n    form(_b: Dot, _way: Vector) {\r\n        return new Segment(_b, Dot.toDot(opr(_b, _way, (a, b) => a + b)))\r\n    }\r\n\r\n    length() {\r\n        return dis(this.a, this.b)\r\n    }\r\n\r\n    aabb() {\r\n        return AABB.form(this.a, this.b)\r\n    }\r\n\r\n    sdf(d: Dot) {\r\n        let dis1_sqr = dis_sqr(d, this.a)\r\n        let dis2_sqr = dis_sqr(d, this.b)\r\n        let len_sqr = dis_sqr(this.a, this.b)\r\n        let cos_val = (dis1_sqr - dis2_sqr + len_sqr) * (dis2_sqr - dis1_sqr + len_sqr)\r\n        if (cos_val <= 0) {\r\n            //Dun4 jiao3 san1 jiao3 xing2\r\n            return Math.sqrt(Math.min(dis1_sqr, dis2_sqr))\r\n        } else {\r\n            return Math.abs(Line._dd(this.a, this.b).sdf(d))\r\n        }\r\n    }\r\n}\r\n\r\nclass Line extends Shape {\r\n    constructor(public readonly A: number,\r\n        public readonly B: number,\r\n        public readonly C: number) { super('Line') }\r\n\r\n    sdf(d: Dot): number {\r\n        return this.takein(d) / len({ x: this.A, y: this.B })\r\n    }\r\n\r\n    takein(d: Dot) {\r\n        return this.A * d.x + this.B * d.y + this.C\r\n    }\r\n\r\n    static _dn(d: Dot, n: Vector): Line {\r\n        //d : (m,n) , n : (a,b) , l : a(x-m)+b(y-n)=0\r\n        return new Line(n.x, n.y, -dotProduct(d, n))\r\n    }\r\n\r\n    static _da(d: Dot, a: Vector): Line {\r\n        //d : (m,n) , a : (a,b) , l : (x-m) / a = (y-n) / b\r\n        return new Line(-a.y, a.x, -dotProduct(d, a))\r\n    }\r\n\r\n    static _dd(a: Dot, b: Dot): Line {\r\n        return this._da(a, Vector.form(a, b))\r\n    }\r\n\r\n    static _dk(d: Dot, k: number): Line {\r\n        //d : (m,n) , k , y - n = k * ( x - m )\r\n        return this._kb(k, -k * d.y + d.x)\r\n        //equivalent : new Line(1, -k, m * k - n)\r\n    }\r\n\r\n    static _kb(k: number, b: number): Line {\r\n        //k , b , y = k * x + b\r\n        return new Line(1, -k, b)\r\n    }\r\n}\r\n\r\n//derivations\r\nclass Capsule extends Shape {\r\n    constructor(public readonly segment: Segment,\r\n        public readonly radius: number) { super('Capsule') }\r\n\r\n    sdf(d: Dot) {\r\n        return this.segment.sdf(d) - this.radius\r\n    }\r\n\r\n    aabb(){\r\n        return this.segment.aabb().expand(this.radius)\r\n    }\r\n}\r\n\r\nclass Circle extends Shape {\r\n    constructor(public readonly center: Dot, public readonly radius: number) { super('Circle') }\r\n\r\n    sdf(d: Dot) {\r\n        return this.center.sdf(d) - this.radius\r\n    }\r\n\r\n    aabb(){\r\n        return this.center.aabb().expand(this.radius)\r\n    }\r\n}\r\n\r\n/*\r\nfunction ngon(n,r){\r\n    let pi = 3.14\r\n    return (x,y)=>{\r\n        if(n<=2)\r\n            return 1\r\n        const angle = Math.atan2(y,x);\r\n        const div = 2 * pi / n;\r\n        let i = Math.floor(angle/div)\r\n        let j = i + 0.5\r\n        const mpr = r * Math.cos(div/2)\r\n        let mp = new Dot(mpr * Math.cos(j * div), mpr * Math.sin(j * div))\r\n        let line = Line._dn(mp, Vector.toVector(mp))\r\n        return line.sdf(new Dot(x,y))\r\n    }\r\n}\r\n*/\r\n","import {Matrix} from '../scimath/matrix'//class\r\nimport {Shape,Pair,Dot,Vector} from './geomath'//fundamental shapes\r\nimport {dotProduct,dis,dis_sqr,len,opr} from './geomath'//methods\r\nimport {Line, Segment,Capsule,Circle} from './shapes'//additional shapes\r\n\r\nexport {Matrix}\r\nexport {Shape,Pair,Dot,Vector}\r\nexport {Line, Segment,Capsule,Circle}\r\n\r\ntype flex = number | Dot\r\n\r\ntype flexout = Dot | Circle | Segment\r\ntype out = Dot & Circle & Segment\r\n\r\ntype candy = (a : flex, b : flex) => flexout\r\n\r\nlet helper : candy = (a : flex, b : flex) => {\r\n    if(typeof b == 'number'){\r\n        if(typeof a == 'number'){\r\n            return new Dot(a,b)\r\n        }else{\r\n            return new Circle(a,b)\r\n        }\r\n    }else{\r\n        if(a instanceof Dot ){\r\n            return new Segment(a,b)\r\n        }else{\r\n            throw 'helper function _() cannot call upon (a : number, b: Dot)'\r\n        }\r\n    }\r\n}\r\n\r\nexport let _ = (a:flex,b:flex) => <out>(helper(a,b))","function range(btm: number, top: number, val: number) {\r\n\treturn Math.max(btm, Math.min(val, top))\r\n}\r\n\r\nfunction threshold(x1: number, x2: number, val: number): number {\r\n\tval = (val - x1) / (x2 - x1)\r\n\tval = range(0, 1, val)\r\n\treturn val\r\n}\r\n\r\nexport {range,threshold}","import { range, threshold } from '../scimath/utils'\r\nexport { Color, BlendMode, ChannelData, fill_pixel, blend_pixel }\r\n\r\nclass Color {\r\n\r\n    constructor(public readonly R: number,\r\n        public readonly G: number,\r\n        public readonly B: number) { }\r\n}\r\n\r\ntype ChannelData = Uint8ClampedArray\r\ntype reduce<T> = (a: T, b: T) => T\r\n\r\nfunction fromHex(hex:string){\r\n    let reg=/#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})/\r\n    let ret = hex.match(reg)\r\n    let res = ret![0]\r\n    return res\r\n}\r\n\r\nfunction fill_pixel(data: ChannelData, i: number, color: Color): void {\r\n    data[4 * i] = color.R\r\n    data[4 * i + 1] = color.G\r\n    data[4 * i + 2] = color.B\r\n    data[4 * i + 3] = 255\r\n}\r\n\r\nclass BlendMode {\r\n    static Normal(a: number, b: number) {\r\n        return b;\r\n    }\r\n\r\n    static Multiply(a: number, b: number) {\r\n        return a * b / 255\r\n    }\r\n\r\n    static Screen(a: number, b: number) {\r\n        return 255 - (255 - a) * (255 - b) / 255\r\n    }\r\n\r\n    static Overlay(a: number, b: number) {\r\n        if (a < 0.5 * 255) {\r\n            return 2 * a * b / 255\r\n        } else {\r\n            return 255 - 2 * (255 - a) * (255 - b) / 255\r\n        }\r\n    }\r\n}\r\n\r\nfunction blend_pixel(data: ChannelData, i: number, color: Color, alpha: number, opr: reduce<number>): void {\r\n    let op = (a, b) => range(0, 255, opr(a, b))\r\n    let c = [color.R, color.G, color.B]\r\n    for (let j = 0; j < 3; j++) {\r\n        let result = op(data[4 * i], c[j])\r\n        data[4 * i + j] *= (1 - alpha)\r\n        data[4 * i + j] += result * alpha\r\n    }\r\n    data[4 * i + 3] = 255\r\n}\r\n","import { Shape, _ } from '../geo/pack';\r\nimport { range, threshold } from '../scimath/utils'\r\nimport { Color, blend_pixel, BlendMode } from './color'\r\nexport { Coordinate, Canvas, Context2D }\r\ntype Canvas = HTMLCanvasElement\r\ntype Context2D = CanvasRenderingContext2D\r\nclass Coordinate {\r\n    constructor(private ctx: Context2D,\r\n        public readonly width: ()=>number,\r\n        public readonly height: ()=>number) { }\r\n    //Regularize the coordinate \r\n    /*\r\n    @----------->x (0,width)\t  => \t  \t    y (-1,1)\r\n    |\t\t\t\t\t\t\t  \t    \t\t^\r\n    |\t\t\t\t\t\t\t \t \t        |\r\n    |\t\t\t\t\t\t\t\t \t\t   \t|\r\n    |\t\t\t\t\t\t\t\t \t--------@------>x (-1,1)\r\n    v\t\t\t\t\t\t\t\t \t \t    |\r\n    y (0,height)\t\t\t\t\t \t   \t\t|\r\n    */\r\n\r\n    axis() {\r\n        const [w, h] = [this.width(), this.height()]\r\n\r\n        this.ctx.fillStyle = '#e51c23'\r\n        this.ctx.fillRect(Math.floor(w * 0.5) - 1, 0, 2, h)  //y\r\n        this.ctx.fillRect(0, Math.floor(h * 0.5) - 1, w, 2)  //x\r\n\r\n        const [weight, length, step] = [1, 0.005, 20]\r\n        for (let i = 0; i <= step; i++) {\r\n            this.ctx.fillRect(Math.floor(w * (0.5 - length)), Math.floor(i * (h / step) - weight / 2),\r\n                Math.floor(w * 2 * length), weight)  //y\r\n            this.ctx.fillRect(Math.floor(i * (w / step) - weight / 2), Math.floor(h * (0.5 - length)),\r\n                weight, Math.floor(h * 2 * length))  //x\r\n        }\r\n    }\r\n\r\n    private toRelXY(absXY: [number, number]): [number, number] {\r\n        const [absX, absY] = absXY\r\n        return [this.toRelX(absX), this.toRelY(absY)]\r\n    }\r\n\r\n    private toRelX(absX: number): number {\r\n        const half_w = this.width() * 0.5\r\n        return (absX - half_w) / half_w\r\n    }\r\n\r\n    private toRelY(absY: number): number {\r\n        const half_h = this.height() * 0.5\r\n        return (half_h - absY) / half_h\r\n    }\r\n\r\n    private toAbsXY(relXY: [number, number]): [number, number] {\r\n        const [relX, relY] = relXY\r\n        const [half_w, half_h] = [this.width() * 0.5, this.height() * 0.5]\r\n        return [(relX * half_w) + half_w, half_h - (half_h * relY)]\r\n    }\r\n\r\n    renderSDF(shapes: Shape[]) {\r\n        const [w, h] = [this.width(), this.height()]\r\n\r\n        let data = this.ctx.getImageData(0, 0, w, h)\r\n        let pixels = data.data\r\n        pixels.fill(255)\r\n        for (let shape of shapes) {\r\n            console.log(shape)\r\n            let [minX, minY] = this.toAbsXY(shape.aabb().min)\r\n            let [maxX, maxY] = this.toAbsXY(shape.aabb().max)\r\n            minX = Math.floor(minX)\r\n            minY = Math.floor(minY)\r\n            maxX = Math.ceil(maxX)\r\n            maxY = Math.ceil(maxY)\r\n            let x, y\r\n            let color = new Color(Math.random()*255, Math.random()*255, Math.random()*255)\r\n            for (let absY = maxY; absY < minY; absY++) {\r\n                y = this.toRelY(absY)\r\n                for (let absX = minX; absX < maxX; absX++) {\r\n                    x = this.toRelX(absX)\r\n                    let ret = shape.sdf(_(x, y))\r\n                    ret = 1 - threshold(-0.001, 0.001, ret)\t\t//calculate\r\n\r\n                    blend_pixel(pixels, absY * w + absX,\r\n                        color,ret,\r\n                        BlendMode.Multiply\r\n                    )\r\n                }\r\n            }\r\n        }\r\n        this.ctx.putImageData(data, 0, 0)\r\n    }\r\n}","import { Shape, Dot, Segment, Capsule, Circle, _ } from './geo/pack';\r\nimport { Coordinate, Canvas, Context2D } from './canvas/painter'\r\n\r\nfunction init_canvas(cvs: Canvas): Coordinate {\r\n\tlet ctx: Context2D = cvs.getContext('2d')!\r\n\tctx.imageSmoothingEnabled = false\t\t\t//pixel level rendering\r\n\treturn new Coordinate(ctx, () => cvs.width, () => cvs.height)\r\n}\r\n\r\nfunction getCanvas(cvs_id: string): Canvas {\r\n\treturn <Canvas>document.getElementById(cvs_id)\r\n}\r\n\r\nfunction save(cvs: Canvas): void {\r\n\tlet url = cvs.toDataURL()\r\n\tconsole.log(url)\r\n}\r\n\r\nfunction main() {//the entry that register everything\r\n\tconsole.log(\"main loaded\")\r\n\r\n\tlet canvas = getCanvas('cvs')\r\n\tlet painter = init_canvas(canvas)\r\n\tlet axis = getCanvas('axis')\r\n\tlet axispainter = init_canvas(axis)\r\n\taxispainter.axis()\r\n\r\n\t//behaviours\r\n\tlet shape_list: Shape[] = []\r\n\tshape_list.push(new Capsule(_(_(0, 0), _(0.2, 0.1)), 0.12))\r\n\tshape_list.push(_(_(-0.5, 0), 0.12))\r\n\tshape_list.push(_(_(-0.25, 0.1), 0.25))\r\n\r\n\t//event bindings\r\n\tlet saveBtn = document.getElementById('save')\r\n\tsaveBtn!.addEventListener('click', () => {\r\n\t\tsave(canvas)\r\n\t})\r\n\r\n\tlet doBtn = document.getElementById('do')\r\n\tdoBtn!.addEventListener('click', () => {\r\n\t\tpainter.renderSDF(shape_list)\r\n\t})\r\n\r\n\r\n\tlet axisCkBx = <HTMLInputElement>document.getElementById('axison')\r\n\taxisCkBx.checked=true\r\n\taxisCkBx!.addEventListener('change', (ev) => {\r\n\t\taxis.style.display = (axisCkBx!.checked) ? \"\" : \"none\"\r\n\t})\r\n\r\n\tlet resCkBx = <HTMLInputElement>document.getElementById('res')\r\n\tresCkBx!.addEventListener('change', (ev) => {\r\n\t\tlet val = (resCkBx!.checked) ? '1000' : '500'\r\n\t\tcanvas.setAttribute('width', val)\r\n\t\tcanvas.setAttribute('height', val)\r\n\t\tpainter.renderSDF(shape_list)\r\n\t})\r\n\r\n\t//init\r\n\tpainter.renderSDF(shape_list)\r\n}\r\n\r\nmain()"],"sourceRoot":""}